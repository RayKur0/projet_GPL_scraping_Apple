#!/bin/bash
# Script pour g√©n√©rer le rapport quotidien pour AAPL

# D√©finir la date du jour
TODAY=$(date '+%Y-%m-%d')

# Extraire les donn√©es du jour depuis data.txt
grep "^$TODAY" data.txt > today_data.txt

# V√©rifier que today_data.txt contient des donn√©es
if [ ! -s today_data.txt ]; then
    echo "Aucune donn√©e pour aujourd'hui."
    exit 1
fi

# R√©cup√©rer le prix d'ouverture (premi√®re valeur) et de cl√¥ture (derni√®re valeur)
OPEN=$(head -1 today_data.txt | cut -d',' -f2)
CLOSE=$(tail -1 today_data.txt | cut -d',' -f2)

# Calculer le changement en valeur et en pourcentage
CHANGE=$(echo "$CLOSE - $OPEN" | bc -l)
PERCENT_CHANGE=$(echo "scale=2; ($CHANGE / $OPEN) * 100" | bc -l)

# Calculer la moyenne et la volatilit√© (√©cart-type) en utilisant awk
read AVG STD < <(awk -F, '{
    sum+=$2; sumsq+=$2*$2; count++
} END {
    if (count > 0) {
        avg = sum/count;
        variance = (sumsq - (sum*sum)/count)/count;
        if (variance < 0) variance=0;
        std = sqrt(variance);
        printf "%.3f %.3f", avg, std;
    }
}' today_data.txt)

# Le rendement journalier est le pourcentage de changement
DAILY_RETURN=$PERCENT_CHANGE

# Formatage du rapport avec les emojis demand√©s
REPORT="Daily Report - 20h
üìÖ Date: $TODAY

üü¢ Open Price: $OPEN \$

üî¥ Close Price: $CLOSE \$

üìà Change: $CHANGE \$ ($PERCENT_CHANGE%)

üìä Volatility: $STD

üìâ Average Price: $AVG \$

üíπ Daily Return: $DAILY_RETURN%
"

# Enregistrer le rapport dans daily_report.txt et l'afficher
echo "$REPORT" > daily_report.txt
echo "$REPORT"
